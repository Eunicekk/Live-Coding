function solution(land) {
    let n = land.length;

    for (let i = 1; i < n; i++) {
        land[i][0] += Math.max(land[i-1][1], land[i-1][2], land[i-1][3]);
        land[i][1] += Math.max(land[i-1][0], land[i-1][2], land[i-1][3]);
        land[i][2] += Math.max(land[i-1][0], land[i-1][1], land[i-1][3]);
        land[i][3] += Math.max(land[i-1][0], land[i-1][1], land[i-1][2]);
    }

    return Math.max(...land[n-1]);
}

// 정확성  테스트
// 테스트 1 〉	통과 (0.67ms, 33.7MB)
// 테스트 2 〉	통과 (0.67ms, 33.8MB)
// 테스트 3 〉	통과 (0.78ms, 34MB)
// 테스트 4 〉	통과 (0.67ms, 33.8MB)
// 테스트 5 〉	통과 (0.67ms, 33.9MB)
// 테스트 6 〉	통과 (0.75ms, 33.2MB)
// 테스트 7 〉	통과 (0.70ms, 33.3MB)
// 테스트 8 〉	통과 (0.73ms, 33.8MB)
// 테스트 9 〉	통과 (0.71ms, 33.8MB)
// 테스트 10 〉	통과 (0.76ms, 34MB)
// 테스트 11 〉	통과 (0.75ms, 33.9MB)
// 테스트 12 〉	통과 (0.74ms, 33.8MB)
// 테스트 13 〉	통과 (0.73ms, 33.8MB)
// 테스트 14 〉	통과 (0.74ms, 34MB)
// 테스트 15 〉	통과 (0.74ms, 33.8MB)
// 테스트 16 〉	통과 (0.70ms, 33.8MB)
// 테스트 17 〉	통과 (0.74ms, 33.8MB)
// 테스트 18 〉	통과 (0.73ms, 33.8MB)
// 효율성  테스트
// 테스트 1 〉	통과 (25.08ms, 77.2MB)
// 테스트 2 〉	통과 (25.60ms, 77.4MB)
// 테스트 3 〉	통과 (25.01ms, 77.6MB)
// 테스트 4 〉	통과 (22.56ms, 78.3MB)
